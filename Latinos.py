import telebot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton

TOKEN = "7700434658:AAEJetoOm9YYVok3EKYOQgAMNKRszqkjfpA"
bot = telebot.TeleBot(TOKEN)

# Lista para almacenar los IDs de los mensajes secundarios
tracked_messages = []

# Manejo del comando /start
@bot.message_handler(commands=['start'])
def start_command(message):
    chat_id = message.chat.id
    bot.send_message(chat_id, "¬°Hola, amigo!! ¬øEn qu√© puedo ayudarte hoy?")
    show_main_menu(chat_id)

# Men√∫ principal con botones
def show_main_menu(chat_id):
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton("üìö Tramites migratorios", callback_data="info_academica"))
    markup.add(InlineKeyboardButton("üìç Direcciones", callback_data="direcciones"))
    markup.add(InlineKeyboardButton("üéì Becas y ayudas", callback_data="becas"))
    markup.add(InlineKeyboardButton("üìÖ Eventos y actividades", callback_data="eventos"))
    markup.add(InlineKeyboardButton("üôè Donaciones", callback_data="donaciones"))
    markup.add(InlineKeyboardButton("üí¨ Soporte y asesor√≠a", callback_data="soporte"))
    bot.send_message(chat_id, "Selecciona una opci√≥n del men√∫:", reply_markup=markup)

# Funci√≥n que se llama cuando se presiona un bot√≥n
@bot.callback_query_handler(func=lambda call: True)
def callback_query(call):
    global tracked_messages  # Accedemos a la lista global

    chat_id = call.message.chat.id

    # Manejamos los datos del callback
    if call.data == "info_academica":
        bot.answer_callback_query(call.id, "Seleccionaste Tr√°mites migratorios...")
        remove_message(chat_id, call.message.message_id)  # Eliminar el mensaje del men√∫ principal
        show_visa_options(chat_id)


    
    elif call.data == "direcciones":
        bot.answer_callback_query(call.id, "Seleccionaste Direcciones...")
        remove_message(chat_id, call.message.message_id)  # Eliminar el mensaje del men√∫ principal
        show_direcciones_options(chat_id)


    elif call.data == "dormitorios":
        bot.answer_callback_query(call.id, "Seleccionaste Dormitorios...")
        remove_message(chat_id, call.message.message_id)  # Eliminar el mensaje del men√∫ principal
        show_dormitory_options(chat_id)


    elif call.data == "dorm1":
        bot.answer_callback_query(call.id, "Seleccionaste Dormitorio 1...")
        remove_message(chat_id, call.message.message_id)  # Eliminar el mensaje del men√∫ principal
        msg = bot.send_message(chat_id, 
                               "—É–ª. –ë–æ–ª—å—à–∞–∫–æ–≤–∞, 79\n"
                               "Jefa del Dormitorio: Elena Valerievna Arkhipova\n"
                               "Presidente: [Anastasia Botina](https://vk.com/example_profile)", parse_mode="Markdown")
        tracked_messages.append(msg.message_id)
        show_main_menu_button(chat_id)
    
    elif call.data == "dorm2":
        bot.answer_callback_query(call.id, "Seleccionaste Dormitorio 2...")
        remove_message(chat_id, call.message.message_id)  # Eliminar el mensaje del men√∫ principal
        msg = bot.send_message(chat_id, 
                               "—É–ª. –ë–æ–ª—å—à–∞–∫–æ–≤–∞, 77\n"
                               "Jefa del Dormitorio: –î–∞–≤—ã–¥–æ–≤–∞ –ê–Ω–Ω–∞ –ú–∏—Ö–∞–π–ª–æ–≤–Ω–∞\n"
                               "Presidente: [–ê–Ω–∞—Å—Ç–∞—Å–∏—è –°–º–æ—Ä–æ–¥–∏–Ω–∞](https://vk.com/satella_23)", parse_mode="Markdown")
        tracked_messages.append(msg.message_id)
        show_main_menu_button(chat_id)


    elif call.data == "dorm5":
        bot.answer_callback_query(call.id, "Seleccionaste Dormitorio 5...")
        remove_message(chat_id, call.message.message_id)  # Eliminar el mensaje del men√∫ principal
        msg = bot.send_message(chat_id, 
                               "—É–ª. –ë–æ–ª—å—à–∞–∫–æ–≤–∞, 77\n"
                               "Jefa del Dormitorio: –ú–∏–Ω—è–∑–µ–≤–∞ –ì—É–ª—å–Ω–∞—Ä–∞ –†–∞–∏—Å–æ–≤–Ω–∞\n"
                               "Presidente: [–ê–Ω–∞—Å—Ç–∞—Å–∏—è –ü–µ—Ç—Ä–æ–≤–∞](https://vk.com/sttaceyy)", parse_mode="Markdown")
        tracked_messages.append(msg.message_id)
        show_main_menu_button(chat_id)

    elif call.data == "dorm7":
        bot.answer_callback_query(call.id, "Seleccionaste Dormitorio 7...")
        remove_message(chat_id, call.message.message_id)  # Eliminar el mensaje del men√∫ principal
        msg = bot.send_message(chat_id, "7")
        tracked_messages.append(msg.message_id)
        show_main_menu_button(chat_id)


    elif call.data == "dorm8":
        bot.answer_callback_query(call.id, "Seleccionaste Dormitorio 8...")
        remove_message(chat_id, call.message.message_id)  # Eliminar el mensaje del men√∫ principal
        msg = bot.send_message(chat_id, 
                               "—É–ª. –ö–æ–º—Å–æ–º–æ–ª—å—Å–∫–∞—è, 70\n"
                               "Jefa del Dormitorio: –ù–∞—Ç–∞–ª—å—è –°–µ—Ä–≥–µ–µ–≤–Ω–∞ –ë—Ä–∞—Ç—á–∏–∫–æ–≤–∞\n"
                               "Presidente: [–ú–æ—à–µ—á–∫–æ–≤–∞ –õ—é–±–æ–≤—å](https://vk.com/id249044204)", parse_mode="Markdown")
        tracked_messages.append(msg.message_id)
        show_main_menu_button(chat_id)


    elif call.data == "dorm15":
        bot.answer_callback_query(call.id, "Seleccionaste Dormitorio 15...")
        remove_message(chat_id, call.message.message_id)  # Eliminar el mensaje del men√∫ principal
        msg = bot.send_message(chat_id, 
                               "—É–ª. –ö–æ–º–∏–Ω—Ç–µ—Ä–Ω–∞, 11\n"
                               "Jefa del Dormitorio: –ß–µ—Ä–Ω—ã—à–æ–≤–∞ –ù–∞–¥–µ–∂–¥–∞ –ò–≤–∞–Ω–æ–≤–Ω–∞\n")
        tracked_messages.append(msg.message_id)
        show_main_menu_button(chat_id)


    elif call.data == "nvk1":
        bot.answer_callback_query(call.id, "Seleccionaste Dormitorio NKK 1...")
        remove_message(chat_id, call.message.message_id)  # Eliminar el mensaje del men√∫ principal
        msg = bot.send_message(chat_id, 
                               "—É–ª. 100 –ª–µ—Ç–∏—è –£—Ä–∞–ª—å—Å–∫–æ–≥–æ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞, 6\n"
                               "Jefa del Dormitorio: –ê–∑–∞–Ω–æ–≤–∞ –°–≤–µ—Ç–ª–∞–Ω–∞ –ê—Ä–∫–∞–¥—å–µ–≤–Ω–∞\n"
                               "Presidente: [–í–µ—Ä–æ–Ω–∏–∫–∞ –ë–∞—Ä—Å—É–∫–æ–≤–∞](https://vk.com/your_littlelove)", parse_mode="Markdown")
        tracked_messages.append(msg.message_id)
        show_main_menu_button(chat_id)


    elif call.data == "nvk2":
        bot.answer_callback_query(call.id, "Seleccionaste Dormitorio NVK 2...")
        remove_message(chat_id, call.message.message_id)  # Eliminar el mensaje del men√∫ principal
        msg = bot.send_message(chat_id, 
                               "—É–ª. 100 –ª–µ—Ç–∏—è –£—Ä–∞–ª—å—Å–∫–æ–≥–æ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞, 6\n"
                               "Jefa del Dormitorio: –¢–æ–ª—à–∏–Ω–∞ –ú–∞—Ä–∏–Ω–∞ –ì–µ–Ω–Ω–∞–¥—å–µ–≤–Ω–∞\n"
                               "Presidente: [–í–µ—Ä–æ–Ω–∏–∫–∞ –ë–∞—Ä—Å—É–∫–æ–≤–∞](https://vk.com/your_littlelove)", parse_mode="Markdown")
        tracked_messages.append(msg.message_id)
        show_main_menu_button(chat_id)

   
    elif call.data == "becas":
        bot.answer_callback_query(call.id, "Seleccionaste Becas y ayudas...")
        remove_message(chat_id, call.message.message_id)  # Eliminar el mensaje del men√∫ principal
        msg = bot.send_message(chat_id, "Publicaremos algo si hay algun intercambio academico, becas e incluso ofertas de trabajo")
        tracked_messages.append(msg.message_id)
        show_main_menu_button(chat_id)


    elif call.data == "eventos":
        bot.answer_callback_query(call.id, "Seleccionaste Eventos y actividades...")
        remove_message(chat_id, call.message.message_id)  # Eliminar el mensaje del men√∫ principal
        msg = bot.send_message(chat_id, "Aqui se publicaran todos los eventos de la comunidad, de otras comunidades y de la universidad")
        tracked_messages.append(msg.message_id)
        show_main_menu_button(chat_id)

    elif call.data == "donaciones":
        bot.answer_callback_query(call.id, "Seleccionaste Donaciones...")
        remove_message(chat_id, call.message.message_id)  # Eliminar el mensaje del men√∫ principal
        show_donations_options(chat_id)


    elif call.data == "soporte":
        bot.answer_callback_query(call.id, "Seleccionaste Soporte y asesor√≠a...")
        remove_message(chat_id, call.message.message_id)  # Eliminar el mensaje del men√∫ principal
        msg = bot.send_message(chat_id, "¬øNecesitas ayuda? Cont√°ctame:\n\n- Email: jeremmymolina274@gmail.com\n- Tel√©fono: +7 932 614 99 72\n- Telegram: @Cherrjma")
        tracked_messages.append(msg.message_id)
        show_main_menu_button(chat_id)

    # Opciones dentro del submen√∫ de visado
    elif call.data == "primera_visa":
        bot.answer_callback_query(call.id, "Mostrando informaci√≥n sobre la primera visa...")
        msg = bot.send_message(chat_id, 
            "- 2 copias del pasaporte (primera p√°gina)\n"
            "- 1 copia de todas las p√°ginas del pasaporte (p√°ginas con sellos)\n"
            "- 2 copias de la carta de migraci√≥n\n"
            "- 2 copias de la visa con la que ingresaron al pa√≠s\n"
            "- 2 copias de la registraci√≥n\n"
            "- 1 foto tama√±o carnet\n"
            "- Pago de 1900 p por la visa\n"
            "- Copia del contrato de estudios\n"
            "- Original y copias de ex√°menes m√©dicos (VIH, Narc√≥ticos y Radiograf√≠a)")
        tracked_messages.append(msg.message_id)
        show_main_menu_button(chat_id)

    elif call.data == "prolongacion_visa":
        bot.answer_callback_query(call.id, "Mostrando informaci√≥n sobre prolongaci√≥n de visa...")
        msg = bot.send_message(chat_id, 
            "- 2 copias del pasaporte (primera p√°gina)\n"
            "- 1 copia de todas las p√°ginas del pasaporte (p√°ginas con sellos)\n"
            "- 2 copias de la carta de migraci√≥n\n"
            "- 2 copias de la visa anterior\n"
            "- 2 copias de la registraci√≥n\n"
            "- 1 foto tama√±o carnet\n"
            "- Pago de 1900 p por la visa\n"
            "- Copia y original de la tarjeta verde\n"
            "- Copia del contrato de estudios\n"
            "- Original y copias de ex√°menes m√©dicos (VIH, Narc√≥ticos y Radiograf√≠a)\n"
            "\n*Los examenes medigos se pueden hacer en —É–ª. —è—Å–Ω–∞—è 46 y —É–ª. –°—ã—Ä–æ–º–æ–ª–æ—Ç–æ–≤–∞ 19*", parse_mode="Markdown")
        tracked_messages.append(msg.message_id)
        show_main_menu_button(chat_id)

    elif call.data == "registracion":
        bot.answer_callback_query(call.id, "Mostrando informaci√≥n sobre registraci√≥n...")
        msg = bot.send_message(chat_id, 
            "- Contrato original del dormitorio\n"
            "- Copia de todas las paginas llenas del pasaporte\n"
            "- Copia de la cartera de migracion\n"
            "- ***Copia de la registracion anterior\n"
            "- ***Copia de la tarjeta verde\n"
            "- ***Copias de los examenes medicos (VIH, Narcoticos y rayos X)\n\n\n"
            "*** Significa que solo es para segunda registracion en adelante")
        tracked_messages.append(msg.message_id)
        show_main_menu_button(chat_id)

    elif call.data == "tarjeta-verde":
        bot.answer_callback_query(call.id, "Mostrando informaci√≥n sobre la tarjeta verde...")
        msg = bot.send_message(chat_id,
                               "Este proceso se realiza una sola vez por la policia de tu region, el documento no tiene caducidad y sirve en todo el territorio de la Federacion Rusa\n"
                               "Los documentos necesarios son los siguientes:\n"
                               "\t  - Copias de los examenes medicos (VIH, Narcoticos y rayos X)\n"
                               "\t  - Pasaporte y traduccion del mismo con firma de un notario\n"
                               "\t  - Registracion\n"
                               "\t  - Carta de migracion\n"
                               "\t  - Copia y original de la visa actual\n")
        tracked_messages.append(msg.message_id)
        show_main_menu_button(chat_id)
    
    elif call.data == "institutos":
        bot.answer_callback_query(call.id, "Mostrando informaci√≥n sobre institutos...")
        msg = bot.send_message(chat_id, 
            "*-  Ciencias Naturales y Matem√°ticas*\n\t\t\tüìç–£–ª. –ö—É–π–±—ã—à–µ–≤–∞, 48\n"
            "*-  Nuevos Materiales y Tecnolog√≠as*\n\t\t\tüìç–£–ª. –ú–∏—Ä–∞, 28\n"
            "*-  Radioelectr√≥nica y Tecnolog√≠as de la Informaci√≥n*\n\t\t\tüìç–£–ª. –ú–∏—Ä–∞, 32\n"
            "*-  Construcci√≥n y Arquitectura*\n\t\t\tüìç–£–ª. –ú–∏—Ä–∞, 17\n"
            "*-  Cultura F√≠sica, Deportes y Pol√≠tica Juvenil*\n\t\t\tüìç–£–ª. –ö–æ–º–∏–Ω—Ç–µ—Ä–Ω–∞, 14\n"
            "*-  Econom√≠a y Gesti√≥n*\n\t\t\tüìç–£–ª. –ú–∏—Ä–∞, 19, —É–ª. –õ–µ–Ω–∏–Ω–∞, 13–±, —É–ª. –ì–æ–≥–æ–ª—è, 25\n"
            "*-  Humanitario*\n\t\t\tüìç–£–ª. –õ–µ–Ω–∏–Ω–∞, 51\n"
            "*-  F√≠sica y Tecnolog√≠a*\n\t\t\tüìç–£–ª. –ú–∏—Ä–∞, 21\n"
            "*-  Tecnolog√≠a Qu√≠mica*\n\t\t\tüìç—É–ª. –ú–∏—Ä–∞, 28\n", parse_mode="Markdown")
        tracked_messages.append(msg.message_id)
        show_main_menu_button(chat_id)

    elif call.data == "back":
        bot.answer_callback_query(call.id, "Regresando al men√∫ principal...")
        clear_secondary_messages(chat_id)  # Eliminar todos los mensajes secundarios
        show_main_menu(chat_id)

# Funci√≥n para eliminar un mensaje espec√≠fico
def remove_message(chat_id, message_id):
    try:
        bot.delete_message(chat_id, message_id)
    except Exception as e:
        print(f"Error al eliminar el mensaje: {e}")

# Funci√≥n para eliminar todos los mensajes secundarios
def clear_secondary_messages(chat_id):
    global tracked_messages
    for message_id in tracked_messages:
        remove_message(chat_id, message_id)
    tracked_messages = []  # Limpiar la lista despu√©s de eliminar

# Funci√≥n para mostrar opciones sobre visas
def show_visa_options(chat_id):
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton("üìù Primera Visa", callback_data="primera_visa"))
    markup.add(InlineKeyboardButton("üîÑ Prolongaci√≥n de Visa", callback_data="prolongacion_visa"))
    markup.add(InlineKeyboardButton("üìú Registraci√≥n", callback_data="registracion"))
    markup.add(InlineKeyboardButton("üè´ Tarjeta verde", callback_data="tarjeta-verde"))
    markup.add(InlineKeyboardButton("üîô Volver al men√∫ principal", callback_data="back"))
    msg = bot.send_message(chat_id, "Selecciona una opci√≥n sobre visado:", reply_markup=markup)
    tracked_messages.append(msg.message_id)

def show_direcciones_options(chat_id):
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton("üè´ Institutos", callback_data="institutos"))
    markup.add(InlineKeyboardButton("üõèÔ∏è Dormitorios", callback_data="dormitorios"))
    markup.add(InlineKeyboardButton("üîô Volver al men√∫ principal", callback_data="back"))
    msg = bot.send_message(chat_id, "Selecciona una opci√≥n sobre Direcciones:", reply_markup=markup)
    tracked_messages.append(msg.message_id)

def show_donations_options(chat_id):
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton("üí≥ Donar ahora", url="https://www.tinkoff.ru/rm/molina_barriga.dzheremmi_aleksander1/D8Lkv97917"))
    markup.add(InlineKeyboardButton("üîô Volver al men√∫ principal", callback_data="back"))
    msg = bot.send_message(chat_id,
                           "El saldo es de *0 ‚ÇΩ* \n¬°Gracias por tu inter√©s en apoyar!", reply_markup=markup)
    tracked_messages.append(msg.message_id)


#residencias 
def show_dormitory_options(chat_id):
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton("üè¢ Dormitorio 1Ô∏è‚É£ ", callback_data="dorm1"))
    markup.add(InlineKeyboardButton("üè¢ Dormitorio 2Ô∏è‚É£ ", callback_data="dorm2"))
    markup.add(InlineKeyboardButton("üè¢ Dormitorio 5Ô∏è‚É£ ", callback_data="dorm5"))
    markup.add(InlineKeyboardButton("üè¢ Dormitorio 7Ô∏è‚É£ ", callback_data="dorm7"))
    markup.add(InlineKeyboardButton("üè¢ Dormitorio 8Ô∏è‚É£ ", callback_data="dorm8"))
    markup.add(InlineKeyboardButton("üè¢ Dormitorio 1Ô∏è‚É£5Ô∏è‚É£ ", callback_data="dorm15"))
    markup.add(InlineKeyboardButton("üè¢ Dormitorio üÖΩüÜÖüÖ∫1Ô∏è‚É£ ", callback_data="nvk1"))
    markup.add(InlineKeyboardButton("üè¢ Dormitorio üÖΩüÜÖüÖ∫2Ô∏è‚É£ ", callback_data="nvk2"))
    markup.add(InlineKeyboardButton("üîô Volver al men√∫ principal", callback_data="back"))
    msg = bot.send_message(chat_id, "Selecciona un Dormitorio", reply_markup=markup)
    tracked_messages.append(msg.message_id)

# Bot√≥n para regresar al men√∫ principal
def show_main_menu_button(chat_id):
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton("üîô Volver al men√∫ principal", callback_data="back"))
    msg = bot.send_message(chat_id, "Selecciona una opci√≥n:", reply_markup=markup)
    tracked_messages.append(msg.message_id)

bot.infinity_polling()
